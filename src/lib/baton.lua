local a={_VERSION='Baton v1.0.2',_DESCRIPTION='Input library for LÃ–VE.',_URL='https://github.com/tesselode/baton',_LICENSE=[[
		MIT License

		Copyright (c) 2020 Andrew Minnich

		Permission is hereby granted, free of charge, to any person obtaining a copy
		of this software and associated documentation files (the "Software"), to deal
		in the Software without restriction, including without limitation the rights
		to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		copies of the Software, and to permit persons to whom the Software is
		furnished to do so, subject to the following conditions:

		The above copyright notice and this permission notice shall be included in all
		copies or substantial portions of the Software.

		THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
		SOFTWARE.
	]]}local function b(c)return c:match'(.+):(.+)'end;local function d(e)return e:match'(.+)([%+%-])'end;local function f(e)return e:match'(%d)(.+)'end;local g={keyboardMouse={},joystick={}}function g.keyboardMouse.key(h)return 0 end;function g.keyboardMouse.sc(i)return 0 end;function g.keyboardMouse.mouse(j)return 0 end;function g.joystick.axis(k,e)local l,m=d(e)e=tonumber(l)and k:getAxis(tonumber(l))or k:getGamepadAxis(l)if m=='-'then e=-e end;return e>0 and e or 0 end;function g.joystick.button(k,j)if tonumber(j)then return k:isDown(tonumber(j))and 1 or 0 else return k:isGamepadDown(j)and 1 or 0 end end;function g.joystick.hat(k,e)local n,m=f(e)return k:getHat(n)==m and 1 or 0 end;local o={}o.__index=o;function o:_loadConfig(p)if not p then error('No config table provided',4)end;if not p.controls then error('No controls specified',4)end;p.pairs=p.pairs or{}p.deadzone=p.deadzone or.5;p.squareDeadzone=p.squareDeadzone or false;self.config=p end;function o:_initControls()self._controls={}for q,r in pairs(self.config.controls)do self._controls[q]={sources=r,rawValue=0,value=0,down=false,downPrevious=false,pressed=false,released=false}end end;function o:_initPairs()self._pairs={}for s,t in pairs(self.config.pairs)do self._pairs[s]={controls=t,rawX=0,rawY=0,x=0,y=0,down=false,downPrevious=false,pressed=false,released=false}end end;function o:_init(p)self:_loadConfig(p)self:_initControls()self:_initPairs()self._activeDevice='none'end;function o:_setActiveDevice()if self._activeDevice=='joy'and not self.config.joystick then self._activeDevice='none'end;for u,v in pairs(self._controls)do for u,c in ipairs(v.sources)do local w,e=b(c)if g.keyboardMouse[w]then if g.keyboardMouse[w](e)>self.config.deadzone then self._activeDevice='kbm'return end elseif self.config.joystick and g.joystick[w]then if g.joystick[w](self.config.joystick,e)>self.config.deadzone then self._activeDevice='joy'end end end end end;function o:_getControlRawValue(v)local x=0;for u,c in ipairs(v.sources)do local w,e=b(c)if g.keyboardMouse[w]and self._activeDevice=='kbm'then if g.keyboardMouse[w](e)==1 then return 1 end elseif g.joystick[w]and self._activeDevice=='joy'then x=x+g.joystick[w](self.config.joystick,e)if x>=1 then return 1 end end end;return x end;function o:_updateControls()for u,v in pairs(self._controls)do v.rawValue=self:_getControlRawValue(v)v.value=v.rawValue>=self.config.deadzone and v.rawValue or 0;v.downPrevious=v.down;v.down=v.value>0;v.pressed=v.down and not v.downPrevious;v.released=v.downPrevious and not v.down end end;function o:_updatePairs()for u,y in pairs(self._pairs)do local z=self._controls[y.controls[1]].rawValue;local A=self._controls[y.controls[2]].rawValue;local B=self._controls[y.controls[3]].rawValue;local C=self._controls[y.controls[4]].rawValue;y.rawX,y.rawY=A-z,C-B;local D=math.sqrt(y.rawX^2+y.rawY^2)if D>1 then y.rawX,y.rawY=y.rawX/D,y.rawY/D end;if self.config.squareDeadzone then y.x=math.abs(y.rawX)>self.config.deadzone and y.rawX or 0;y.y=math.abs(y.rawY)>self.config.deadzone and y.rawY or 0 else y.x=D>self.config.deadzone and y.rawX or 0;y.y=D>self.config.deadzone and y.rawY or 0 end;y.downPrevious=y.down;y.down=y.x~=0 or y.y~=0;y.pressed=y.down and not y.downPrevious;y.released=y.downPrevious and not y.down end end;function o:update()self:_setActiveDevice()self:_updateControls()self:_updatePairs()end;function o:getRaw(E)if self._pairs[E]then return self._pairs[E].rawX,self._pairs[E].rawY elseif self._controls[E]then return self._controls[E].rawValue else error('No control with name "'..E..'" defined',3)end end;function o:get(E)if self._pairs[E]then return self._pairs[E].x,self._pairs[E].y elseif self._controls[E]then return self._controls[E].value else error('No control with name "'..E..'" defined',3)end end;function o:down(E)if self._pairs[E]then return self._pairs[E].down elseif self._controls[E]then return self._controls[E].down else error('No control with name "'..E..'" defined',3)end end;function o:pressed(E)if self._pairs[E]then return self._pairs[E].pressed elseif self._controls[E]then return self._controls[E].pressed else error('No control with name "'..E..'" defined',3)end end;function o:released(E)if self._pairs[E]then return self._pairs[E].released elseif self._controls[E]then return self._controls[E].released else error('No control with name "'..E..'" defined',3)end end;function o:getActiveDevice()return self._activeDevice end;function a.new(p)local F=setmetatable({},o)F:_init(p)return F end;return a